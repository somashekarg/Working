@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Http
@{
}
@model OneDirect.ViewModels.UserViewModel
<section class="content-header">
    <h1>
        View / Edit Profile
       
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Patients</li>
    </ol>
</section>

<!-- Main content -->




<div class="col-md-12" style="padding-top:20px">
    <!-- Horizontal Form -->
    <div class="box box-info">
      
        <!-- /.box-header -->
        <!-- form start -->
        @using (Html.BeginForm())
        {
            <div class="box-body">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="control-label">Name</label>

                        <div>
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputPassword3" class="control-label">Patient Id</label>

                        <div>
                            @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.UserId)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputPassword3" class="control-label">Password</label>

                        <div>
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="control-label">E-mail ID</label>

                        <div>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="control-label">Provider</label>

                        <div>
                            @if (ViewBag.ddProvider != null)
                            {
                                @Html.DropDownListFor(model => model.ProviderId, ViewBag.ddProvider as IEnumerable<SelectListItem>, "Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProviderId, "", new { @class = "error" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="control-label">Phone</label>

                        <div>
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="control-label">Address</label>

                        <div>
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Address)

                        </div>
                    </div>
                </div>
            </div>
        <!-- /.box-body -->
                <div class="box-footer">
                    @if (@Context.Session.GetString("UserType") != "2" && @Context.Session.GetString("UserType") != "3")
                {
                        <button type="submit" class="btn btn-success pull-right" style="margin-left:10px;">Submit</button>
                    }
                    <button type="button" class="btn btn-warning pull-right"><a href="/Patient/Index">Cancel </a></button>

                </div>
        <!-- /.box-footer -->
        }
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.input-validation-error').on('focus', function () {
                $(this).parents('.form-group').removeClass('has-error');
                $(this).attr('class', 'form-control');
                $(this).next('span.field-validation-error').attr('class', 'field-validation-valid').html('');
            })

            $("button[type=submit]").click(function (e) {
                if ($('form').valid() == false) {
                    $('.field-validation-error').addClass('text-danger');
                }
            });
        });
    </script>
}

